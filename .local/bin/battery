#!/bin/env python3
# coding=UTF-8
import psutil

UNPLUGGED_ICONS = {
    1: "",
    2: "",
    3: "",
    4: "",
    5: "",
    6: "",
    7: "",
    8: "",
    9: "",
    10: "",
}

PLUGGED_ICONS = {
    1: "",
}

UNKOWN_ICON = ""


def get_battery():
    # battery = psutil.sensors_battery()
    # ret = str(round(battery.percent)) + "% "
    # if not battery:
    #     return ret + UNKOWN_ICON
    # if battery.power_plugged:
    #     return ret + PLUGGED_ICONS[min(PLUGGED_ICONS.keys(), key=lambda x: abs(x - battery.percent))]
    # return ret + UNPLUGGED_ICONS[min(UNPLUGGED_ICONS.keys(), key=lambda x: abs(x - battery.percent))]
    battery = psutil.sensors_battery()
    try:
        ret = str(round(battery.percent)) + "% "
        if not battery:
            return ret + UNKOWN_ICON
        if battery.power_plugged:
            return (
                ret
                + PLUGGED_ICONS[
                    min(PLUGGED_ICONS.keys(), key=lambda x: abs(x * 10 - battery.percent))
                ]
            )
        return (
            ret
            + UNPLUGGED_ICONS[
                min(UNPLUGGED_ICONS.keys(), key=lambda x: abs(x * 10 - battery.percent))
            ]
        )
    except AttributeError:
        return ""

print(get_battery())
